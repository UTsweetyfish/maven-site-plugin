Description: Update the dependency on Jetty. This patch can't be upstreamed yet
 because Jetty 9 use a more recent version of Java than the baseline required
 for this Maven plugin.
Author: Emmanuel Bourg <ebourg@apache.org>
Forwarded: no
--- a/src/main/java/org/apache/maven/plugins/site/run/SiteRunMojo.java
+++ b/src/main/java/org/apache/maven/plugins/site/run/SiteRunMojo.java
@@ -38,12 +38,13 @@
 import org.apache.maven.plugins.site.render.AbstractSiteRenderingMojo;
 import org.apache.maven.reporting.exec.MavenReportExecution;
 import org.codehaus.plexus.util.IOUtil;
-import org.mortbay.jetty.Connector;
-import org.mortbay.jetty.Handler;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.handler.DefaultHandler;
-import org.mortbay.jetty.nio.SelectChannelConnector;
-import org.mortbay.jetty.webapp.WebAppContext;
+import org.eclipse.jetty.server.Connector;
+import org.eclipse.jetty.server.Handler;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.ServerConnector;
+import org.eclipse.jetty.server.handler.DefaultHandler;
+import org.eclipse.jetty.server.handler.HandlerList;
+import org.eclipse.jetty.webapp.WebAppContext;
 
 /**
  * Starts the site up, rendering documents as requested for faster editing.
@@ -81,7 +82,7 @@
         Server server = new Server();
         server.setStopAtShutdown( true );
 
-        Connector defaultConnector = getDefaultConnector();
+        ServerConnector defaultConnector = getDefaultConnector(server);
         server.setConnectors( new Connector[] { defaultConnector } );
 
         WebAppContext webapp = createWebApplication();
@@ -90,10 +91,9 @@
         DefaultHandler defaultHandler = new DefaultHandler();
         defaultHandler.setServer( server );
 
-        Handler[] handlers = new Handler[2];
-        handlers[0] = webapp;
-        handlers[1] = defaultHandler;
-        server.setHandlers( handlers );
+        HandlerList handlers = new HandlerList();
+        handlers.setHandlers(new Handler[] { webapp, defaultHandler } );
+        server.setHandler( handlers );
 
         getLog().info( "Starting Jetty on http://localhost:" + port + "/" );
         try
@@ -224,11 +224,11 @@
         return webapp;
     }
 
-    private Connector getDefaultConnector()
+    private ServerConnector getDefaultConnector(Server server)
     {
-        Connector connector = new SelectChannelConnector();
+        ServerConnector connector = new ServerConnector(server);
         connector.setPort( port );
-        connector.setMaxIdleTime( MAX_IDLE_TIME );
+        connector.setIdleTimeout( MAX_IDLE_TIME );
         return connector;
     }
 
--- a/src/test/java/org/apache/maven/plugins/site/deploy/SimpleDavServerHandler.java
+++ b/src/test/java/org/apache/maven/plugins/site/deploy/SimpleDavServerHandler.java
@@ -36,12 +36,12 @@
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.SystemUtils;
-import org.mortbay.jetty.Handler;
-import org.mortbay.jetty.Request;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.handler.AbstractHandler;
-import org.mortbay.jetty.servlet.Context;
-import org.mortbay.jetty.servlet.ServletHolder;
+import org.eclipse.jetty.server.Handler;
+import org.eclipse.jetty.server.Request;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.handler.AbstractHandler;
+import org.eclipse.jetty.servlet.ServletContextHandler;
+import org.eclipse.jetty.servlet.ServletHolder;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -67,7 +67,7 @@
         this.siteTargetPath = targetPath;
         Handler repoHandler = new AbstractHandler()
         {
-            public void handle( String target, HttpServletRequest request, HttpServletResponse response, int dispatch )
+            public void handle( String target, Request req, HttpServletRequest request, HttpServletResponse response )
                 throws IOException, ServletException
             {
                 String targetPath = request.getPathInfo();
@@ -112,7 +112,7 @@
     {
         siteTargetPath = null;
         server = new Server( 0 );
-        Context context = new Context( server, "/", 0 );
+        ServletContextHandler context = new ServletContextHandler( server, "/", ServletContextHandler.SESSIONS );
 
         context.addServlet( new ServletHolder( servlet ), "/" );
         
@@ -121,7 +121,7 @@
     
     public int getPort()
     {
-        return server.getConnectors()[0].getLocalPort();
+        return ((org.eclipse.jetty.server.NetworkConnector) server.getConnectors()[0]).getLocalPort();
     }
 
     public void stop()
--- a/src/test/java/org/apache/maven/plugins/site/deploy/AuthAsyncProxyServlet.java
+++ b/src/test/java/org/apache/maven/plugins/site/deploy/AuthAsyncProxyServlet.java
@@ -35,8 +35,8 @@
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.io.IOUtils;
 import org.apache.maven.plugins.site.deploy.SimpleDavServerHandler.HttpRequest;
-import org.mortbay.jetty.security.B64Code;
-import org.mortbay.proxy.AsyncProxyServlet;
+import org.eclipse.jetty.util.B64Code;
+import org.eclipse.jetty.proxy.AsyncProxyServlet;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -108,7 +108,7 @@
             if ( proxyAuthorization != null && proxyAuthorization.startsWith( "Basic " ) )
             {
                 String proxyAuth = proxyAuthorization.substring( 6 );
-                String authorization = B64Code.decode( proxyAuth );
+                String authorization = B64Code.decode( proxyAuth, "ISO-8859-1" );
                 String[] authTokens = authorization.split( ":" );
                 String user = authTokens[0];
                 String password = authTokens[1];
